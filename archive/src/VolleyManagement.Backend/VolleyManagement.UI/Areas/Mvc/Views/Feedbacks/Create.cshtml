@model VolleyManagement.UI.Areas.Mvc.ViewModels.FeedbackViewModel.FeedbackViewModel

@{
    ViewBag.Title = Resources.UI.FeedbackViews.CreateFeedback;
}

<h2>@Resources.UI.FeedbackViews.FeedbackWaiting</h2>

@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post, new { @id = "feedbackForm" }))
{
<div class="form-horizontal">
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UsersEmail, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.UsersEmail,
                        new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UsersEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.Content,
                    new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control"
                        }
                    })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="isUserAgree" class="control-label col-md-4">
            @Resources.UI.FeedbackViews.EnvironmentQuestion
        </label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.UserEnvironment,
                    new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            @readonly = "readonly"
                        }
                    })
        </div>
        <div class="col-md-8">
            <input type="checkbox" id="isUserAgree" checked />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-4 col-md-8">
            <div class="g-recaptcha" data-sitekey=@Model.ReCapthaKey></div>
            <span id="capthaResponsePlace" class="field-validation-color"></span>
        </div>
    </div>
</div>

<div class="form-group">
    <div class="col-md-offset-4 col-md-8">
        <input type="submit" value="Send" id="send-feedback" class="btn btn-success indented" />
        <span id="responsePlace"></span>
        <span id="waitPlace"></span>
    </div>
</div>
}

<div>
    <button id="feedback-return" class="btn btn-default">
        @Resources.UI.FeedbackViews.Return
    </button>
</div>

@Scripts.Render("~/bundles/feedbackscripts")

<script src='https://www.google.com/recaptcha/api.js'></script>