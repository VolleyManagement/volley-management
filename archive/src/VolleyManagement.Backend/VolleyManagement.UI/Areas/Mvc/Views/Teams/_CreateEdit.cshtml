@model VolleyManagement.UI.Areas.Mvc.ViewModels.Teams.TeamViewModel
@using Resources.UI
@using VolleyManagement.Domain

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-label">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Coach)
</div>
<div class="editor-label">
    @Html.EditorFor(model => model.Coach)
    @Html.ValidationMessageFor(model => model.Coach)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Captain)
</div>

@{
    string captainFullName = string.Empty;
    int captainId = 0;
    if (Model.Captain != null)
    {
        captainFullName = Model.Captain.FirstName + " " + Model.Captain.LastName;
        captainId = Model.Captain.Id;
    }
}

<div class="editor-label">
    <input class="text-box single-line"
           id="Captain_FullName"
           name="Captain.FullName"
           type="text"
           value="@captainFullName"
           data-val="true"
           data-val-required='@ViewModelResources.TeamCaptainRequired'
           data-vm-playerid="@captainId" />
    <span class="field-validation-valid" data-valmsg-for="Captain.FullName" data-valmsg-replace="true"></span>
</div>
<br />
<div class="editor-label">
    @Html.LabelFor(model => model.Achievements)
</div>
<div class="multiline-editor-field">
    @Html.TextAreaFor(model => model.Achievements, new { @maxlength = Constants.Team.MAX_ACHIEVEMENTS_LENGTH})
    @Html.ValidationMessageFor(model => model.Achievements)
</div>

<br />

<div>
    <h4>@ViewModelResources.TeamRoster</h4>

    <br />
    <script type="text/javascript">
        (function(){
            "use strict";

            var ns = VM.addNamespace("team.createEdit");
            ns.teamRoster = [];
            @{
                if (Model.Roster != null)
                {
                    foreach (var item in Model.Roster)
                    {
            <text>
            ns.teamRoster.push({
                name: '@(item.FirstName + " " + item.LastName)',
                id: "@(item.Id)",
                isCaptain: @(item.Id == captainId ? "true" : "false")});
            </text>
                    }
                }
            }

        })();
    </script>

    <button id='addPlayerToTeamButton'>Add player to team</button>
    <table id="teamRoster" class="table">
        <tr>
            <th><label>Full Name</label></th>
            <th class="hidden"></th>
        </tr>
    </table>
</div>

@Scripts.Render("~/bundles/teameditscripts")

