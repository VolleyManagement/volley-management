name: Volley Management - 3.0$(Rev:.r)

variables:
  docker_repository_name: sdiachen/volleymanagement

trigger:
- master
- Release
- issue/*

stages:
  - stage: build
    displayName: 'Build'
    jobs:
      - job: container_build
        displayName: Build Container
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              echo Source=$(Build.SourceBranchName)
              echo PR ID=$(System.PullRequest.PullRequestId)
              echo Build Num=$(Build.BuildNumber)
              if [ "$(Build.SourceBranchName)" == "master" ]; then
                echo "Versioning for master build"
                version=$(echo "$(Build.BuildNumber)" | cut -d "-" -f 2)
                echo "##vso[task.setvariable variable=version]$version"
                echo "##vso[task.setvariable variable=image_tag]$version"
              elif [ -n "$(System.PullRequest.PullRequestId)" ]; then
                echo "Versioning for PR build"
                version=0.$(System.PullRequest.PullRequestId).$(build.buildId)
                echo "##vso[task.setvariable variable=version]$version"
                echo "##vso[task.setvariable variable=image_tag]$version-pr"
              else
                echo "Branch is not for master nor a pull request"
                exit 1
              fi
            displayName: 'Check Pull Request variables'
          - task: Docker@2
            displayName: Docker Build and Push
            inputs:
              containerRegistry: 'VM on Personal DockerHub'
              repository: $(docker_repository_name)
              command: 'buildAndPush'
              Dockerfile: './src/VolleyManagement.API/Dockerfile'
              buildContext: './src'
              tags: $(image_tag)
  - stage: deploy_prod
    displayName: 'Deploy Production'
    dependsOn: build
    condition: and(eq(variables['System.PullRequest.PullRequestId'], 0), eq(variables['Build.SourceBranchName'], 'master'))
    jobs:
      - job: deploy_app_service
        displayName: Deploy App Service
        steps:
          - script: echo DEPLOYED