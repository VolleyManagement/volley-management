<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyingDateThreeMonth" xml:space="preserve">
    <value>The applying period should be at least 3 months</value>
  </data>
  <data name="ApplyingPeriodBeforeGamesStart" xml:space="preserve">
    <value>The tournament should start after the applying period end</value>
  </data>
  <data name="ApplyingPeriodEnd" xml:space="preserve">
    <value>End of the applying period</value>
  </data>
  <data name="ApplyingPeriodStart" xml:space="preserve">
    <value>Start of the applying period</value>
  </data>
  <data name="ApplyingStartBeforeEnd" xml:space="preserve">
    <value>Start of the applying period must be earlier than its end</value>
  </data>
  <data name="ApplyingStartBeforeNow" xml:space="preserve">
    <value>Start of the applying period must be later than today</value>
  </data>
  <data name="ConfirmUserPassword" xml:space="preserve">
    <value>FixMe: Confirm password</value>
  </data>
  <data name="Divisions" xml:space="preserve">
    <value>Divisions</value>
  </data>
  <data name="DivisionName" xml:space="preserve">
    <value>Division Name</value>
  </data>
  <data name="DivisionNameMaxLengthErrorMessage" xml:space="preserve">
    <value>{0} can not contain more than {1} symbols</value>
  </data>
  <data name="DivisionNameRequired" xml:space="preserve">
    <value>{0} can not be empty</value>
  </data>
  <data name="EndGamesBeforeStart" xml:space="preserve">
    <value>End of the tournament must be later than its start</value>
  </data>
  <data name="FieldRange" xml:space="preserve">
    <value>Field "{0}" value must be between {1} and {2}</value>
  </data>
  <data name="FieldRequired" xml:space="preserve">
    <value>Field "{0}" is required</value>
  </data>
  <data name="GamesEnd" xml:space="preserve">
    <value>End date of the tournament</value>
  </data>
  <data name="GamesStart" xml:space="preserve">
    <value>Start date of the tournament</value>
  </data>
  <data name="InvalidEntriesError" xml:space="preserve">
    <value>Field {0} must contain only printable characters</value>
  </data>
  <data name="InvalidTournamentId" xml:space="preserve">
    <value>Invalid tournament id</value>
  </data>
  <data name="LoginProviders" xml:space="preserve">
    <value>Login providers</value>
  </data>
  <data name="MaxLengthErrorMessage" xml:space="preserve">
    <value>Field "{0}" can not contain more than {1} symbols</value>
  </data>
  <data name="NotInRange" xml:space="preserve">
    <value>Field "{0}" must be in a range {1} - {2}</value>
  </data>
  <data name="PasswordDidNotMatch" xml:space="preserve">
    <value>FixMe: Password didn't match</value>
  </data>
  <data name="PlayerBirthFieldRange" xml:space="preserve">
    <value>Invalid year of birth</value>
  </data>
  <data name="PlayerBirthYear" xml:space="preserve">
    <value>Year of birth</value>
  </data>
  <data name="PlayerFirstName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="PlayerFirstNameInvalidEntriesError" xml:space="preserve">
    <value>{0} should contain only letters and spaces, or " - ", " ' " characters (no more than one consecutive). {0} must not end with a special character.</value>
  </data>
  <data name="PlayerFirstNameRequired" xml:space="preserve">
    <value>{0} can not be empty</value>
  </data>
  <data name="PlayerFullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="PlayerHeight" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="PlayerHeightFieldRange" xml:space="preserve">
    <value>Invalid height</value>
  </data>
  <data name="PlayerLastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="PlayerLastNameInvalidEntriesError" xml:space="preserve">
    <value>{0} should contain only letters and spaces, or " - ", " ' " characters (no more than one consecutive). {0} must not end with a special character.</value>
  </data>
  <data name="PlayerLastNameRequired" xml:space="preserve">
    <value>{0} can not be empty</value>
  </data>
  <data name="PlayerMaxLengthErrorMessage" xml:space="preserve">
    <value>{0} can not contain more than {1} symbols</value>
  </data>
  <data name="PlayerWasDeletedSuccessfully" xml:space="preserve">
    <value>Player was deleted successfully</value>
  </data>
  <data name="PlayerWeight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="PlayerWeightFieldRange" xml:space="preserve">
    <value>Invalid weight</value>
  </data>
  <data name="TeamAchievements" xml:space="preserve">
    <value>Achievements</value>
  </data>
  <data name="TeamCaptain" xml:space="preserve">
    <value>Captain</value>
  </data>
  <data name="TeamCaptainRequired" xml:space="preserve">
    <value>Team captain is required</value>
  </data>
  <data name="TeamCoach" xml:space="preserve">
    <value>Coach</value>
  </data>
  <data name="TeamMaxLengthErrorMessage" xml:space="preserve">
    <value>{0} can not contain more than {1} symbols</value>
  </data>
  <data name="TeamName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="TeamNameRequired" xml:space="preserve">
    <value>{0} can not be empty</value>
  </data>
  <data name="TeamRoster" xml:space="preserve">
    <value>Roster</value>
  </data>
  <data name="TournamentDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="TournamentLocation" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="TournamentName" xml:space="preserve">
    <value>Tournament name</value>
  </data>
  <data name="TournamentRegulationsLink" xml:space="preserve">
    <value>Tournament regulations link</value>
  </data>
  <data name="TournamentScheme" xml:space="preserve">
    <value>Scheme</value>
  </data>
  <data name="TournamentSeason" xml:space="preserve">
    <value>Season</value>
  </data>
  <data name="TransferEnd" xml:space="preserve">
    <value>End date of the transfer window</value>
  </data>
  <data name="TransferEndAfterStart" xml:space="preserve">
    <value>Start of the transfer must be earlier than its end</value>
  </data>
  <data name="TransferEndBeforeGamesEnd" xml:space="preserve">
    <value>End of the transfer period must be earlier than the tournament end</value>
  </data>
  <data name="TransferStart" xml:space="preserve">
    <value>Start date of the transfer window</value>
  </data>
  <data name="TransferStartBeforeGamesStart" xml:space="preserve">
    <value>Start of the transfer period should be within the tournament</value>
  </data>
  <data name="UniqueNameMessage" xml:space="preserve">
    <value>The tournament name should be unique</value>
  </data>
  <data name="UserCellPhone" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="UserDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="UserEmail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="UserFullName" xml:space="preserve">
    <value>Full name</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="UserPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Group name</value>
  </data>
  <data name="GroupNameMaxLengthErrorMessage" xml:space="preserve">
    <value>{0} can not contain more than {1} symbols</value>
  </data>
  <data name="GroupNameRequired" xml:space="preserve">
    <value>{0} can not be empty</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="DivisionDefaultName" xml:space="preserve">
    <value>Division</value>
  </data>
  <data name="GroupDefaultName" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="TeamWasDeletedSuccessfully" xml:space="preserve">
    <value>Team was deleted successfully</value>
  </data>
  <data name="AwayTeam" xml:space="preserve">
    <value>Away team</value>
  </data>
  <data name="HomeTeam" xml:space="preserve">
    <value>Home team</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Round</value>
  </data>
  <data name="GameDateTime" xml:space="preserve">
    <value>Date and time</value>
  </data>
  <data name="TeamCoachNameInvalidEntriesError" xml:space="preserve">
    <value>{0} should contain only letters and spaces, or " - ", " ' " characters (no more than one consecutive). {0} must not end with a special character.</value>
  </data>
  <data name="FeedbackContent" xml:space="preserve">
    <value>Description of the problem</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid email address</value>
  </data>
  <data name="SuccessRequest" xml:space="preserve">
    <value>Your request was succesfully created. Please, wait until administrator confirm your request.</value>
  </data>
  <data name="NoRights" xml:space="preserve">
    <value>Please, login to apply team for the tournament.</value>
  </data>
  <data name="DeclineMessage" xml:space="preserve">
    <value>Reason for decline</value>
  </data>
  <data name="MessageAboutLinkToPlayer" xml:space="preserve">
    <value>After admin approval you will be linked with</value>
  </data>
  <data name="MessageAboutError" xml:space="preserve">
    <value>Can't find User Id</value>
  </data>
  <data name="RequestNotFound" xml:space="preserve">
    <value>Request with such id not found</value>
  </data>
</root>