@model VolleyManagement.UI.Areas.Mvc.ViewModels.GameResults.TournamentResultsViewModel
@using VolleyManagement.Domain.RolesAggregate

<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = Resources.UI.GameResultViews.TournamentResultsTitle;
}

<h2>@ViewBag.Title</h2>

<fieldset>
    @{
        string legendText = string.Format(Resources.UI.GameResultViews.TournamentResultsLegend, Model.Name);
        string setsScoreText = string.Empty;
        string set1ScoreText = string.Empty;
        string set2ScoreText = string.Empty;
        string set3ScoreText = string.Empty;
        string set4ScoreText = string.Empty;
        string set5ScoreText = string.Empty;
        int number = 0;
    }

    <legend>@legendText</legend>
    @if (Model.GameResults.Count == 0)
    {
    <p>@Resources.UI.GameResultViews.NoGameResults</p>
    }
    else
    {
    <table class="results">
        <thead>
            <tr class="results-header-row">
                <th class="results-header-cell">@Resources.UI.GameResultViews.ResultNumberHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.GameResultHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.Set1ScoreHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.Set2ScoreHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.Set3ScoreHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.Set4ScoreHeader</th>
                <th class="results-header-cell">@Resources.UI.GameResultViews.Set5ScoreHeader</th>
                <th class="results-operation-header-cell"></th>
                <th class="results-operation-header-cell"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var gameResult in Model.GameResults)
                {
                    setsScoreText = gameResult.IsTechnicalDefeat
                        ? gameResult.GameScore.Home > gameResult.GameScore.Away
                            ? string.Format("{0}*:{1}", gameResult.GameScore.Home, gameResult.GameScore.Away)
                            : string.Format("{0}:{1}*", gameResult.GameScore.Home, gameResult.GameScore.Away)
                        : string.Format("{0}:{1}", gameResult.GameScore.Home, gameResult.GameScore.Away);

                    set1ScoreText = string.Format("{0}:{1}", gameResult.SetScores[0].Home, gameResult.SetScores[0].Away);
                    set2ScoreText = string.Format("{0}:{1}", gameResult.SetScores[1].Home, gameResult.SetScores[1].Away);
                    set3ScoreText = string.Format("{0}:{1}", gameResult.SetScores[2].Home, gameResult.SetScores[2].Away);
                    set4ScoreText = string.Format("{0}:{1}", gameResult.SetScores[3].Home, gameResult.SetScores[3].Away);
                    set5ScoreText = string.Format("{0}:{1}", gameResult.SetScores[4].Home, gameResult.SetScores[4].Away);

            <tr class="results-row">
                <td class="results-cell">@(++number)</td>
                <td class="results-cell game-score-cell">
                    <div class="game-home-team">@gameResult.HomeTeamName</div>
                    <div class="game-score">@setsScoreText</div>
                    <div class="game-away-team">@gameResult.AwayTeamName</div>
                </td>
                <td class="results-cell">@set1ScoreText</td>
                <td class="results-cell">@set2ScoreText</td>
                <td class="results-cell">@set3ScoreText</td>
                <td class="results-cell">@set4ScoreText</td>
                <td class="results-cell">@set5ScoreText</td>
                <td class="results-first-operation-cell">
                    @if (Model.Authorization.IsAllowed(AuthOperations.Games.EditResult))
                            {
                    @Html.ActionLink(Resources.UI.GameResultViews.Edit, "Edit", new { id = gameResult.Id }, null)
                            }
                </td>
                <td></td>
            </tr>
                }
        </tbody>
    </table>
    }
</fieldset>

<p>@Html.ActionLink(Resources.UI.GameResultViews.BackToTournament, "Details", "Tournaments", new { id = Model.Id }, null)</p>

<script>
    var DELETE_CONFIRMATION_MESSAGE = "@Resources.UI.GameResultViews.DeleteConfirmationText";
    var DELETE_FAILED_MESSAGE = "@Resources.UI.GameResultsController.GameResultNotFoundView";
</script>