@model VolleyManagement.UI.Areas.Mvc.ViewModels.Players.PlayersListReferrerViewModel
﻿@using VolleyManagement.Domain.RolesAggregate;

@{
    ViewBag.Title = Resources.UI.PlayerViews.PlayersIndexTitle;
}


<h2>@ViewBag.Title</h2>

<div>
    @using (@Html.BeginForm("Index"))
    {
    @Html.Label(Resources.UI.PlayerViews.SearchTitle)
    @Html.TextBox("textToSearch", Model.Model.TextToSearch)
    }
</div>
@if (Model.Model.AllowedOperations.IsAllowed(AuthOperations.Players.Create))
{
@Html.ActionLink(Resources.UI.PlayerViews.CreateNewPlayer, "Create")
}

<table class="table">
    <tr>
        <th>
            <label>Full name</label>
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Model.List)
    {
    <tr>
        <td>
            @Html.ActionLink(item.FirstName+" "+item.LastName, "Details", new { id = item.Id, returnUrl = Model.Referer },
                new { @class = "playerName", @id = item.Id + "playerName" })
        </td>
        <td>
            @if (Model.Model.AllowedOperations.IsAllowed(AuthOperations.Players.Edit))
            {
            @Html.ActionLink(Resources.UI.PlayerViews.Edit, "Edit", new { id = item.Id })  @:|
            }
            @if (Model.Model.AllowedOperations.IsAllowed(AuthOperations.Players.Delete))
            {
            @Html.ActionLink(Resources.UI.PlayerViews.Delete, "Delete", new { id = item.Id },
                        new { @class = "delete", @id = item.Id })
            }
        </td>
    </tr>
    }

</table>
@{
    int firstPage = 1;
    int secondPage = 2;
    int pageBefore = Model.Model.PageNumber - 1;
    int pageAfter = Model.Model.PageNumber + 1;
}

@if (Model.Model.PageNumber != firstPage && Model.Model.List.Count != 0)
{
@Html.ActionLink(firstPage.ToString(), "Index", new { page = (firstPage), textToSearch = Model.Model.TextToSearch });
}

@if (pageBefore > firstPage && Model.Model.List.Count != 0)
{
    if (pageBefore > secondPage)
    {
<b>...</b>
    }
@Html.ActionLink(pageBefore.ToString(), "Index", new { page = (pageBefore), textToSearch = Model.Model.TextToSearch });
}

@if (Model.Model.List.Count != 0)
{
@Model.Model.PageNumber
}

@if (pageAfter < Model.Model.NumberOfPages && Model.Model.List.Count != 0)
{
@Html.ActionLink(pageAfter.ToString(), "Index", new { page = (pageAfter), textToSearch = Model.Model.TextToSearch });
                                                                                                                  if (pageAfter < Model.Model.NumberOfPages - 1)
                                                                                                                  {
<b>...</b>
                                                                                                                  }
}

@if (Model.Model.PageNumber != Model.Model.NumberOfPages && Model.Model.List.Count != 0)
{
@Html.ActionLink(Model.Model.NumberOfPages.ToString(), "Index", new { page = (Model.Model.NumberOfPages), textToSearch = Model.Model.TextToSearch })
}


@if (Model.Model.List.Count == 0)
{
<p>@Resources.UI.PlayerViews.NotFoundPlayerMessage</p>
}

@Html.Hidden("DeleteConfirmationMessage", Resources.UI.PlayerViews.DeleteConfirmationMessage)