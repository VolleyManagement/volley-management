@using Resources.UI
@model VolleyManagement.UI.Areas.Mvc.ViewModels.Tournaments.TournamentApplyViewModel
@{
    ViewBag.Title = @Resources.UI.PlayerViews.ApplyForTournament;
}

@Html.HiddenFor(model => model.Id, new { id = "tournamentId", Value = @Model.Id })

<h2>@Resources.UI.PlayerViews.ApplyTeamFor @Model.TournamentTitle @Resources.UI.PlayerViews.Tournament</h2>
@if (Model.Teams.Count() == 0)
{
@Resources.UI.PlayerViews.NoAvaliableTeams
}
else
{
<table id="tournamentRoster">
    <tr>
        <td id="team">
            @Html.DropDownListFor(x => x.TeamId,
                        new SelectList(Model.Teams, "Id", "Name"))
        </td>
    </tr>
</table>

<p>
    <input type="checkbox" name="agree" id="agree">@Resources.UI.PlayerViews.IAccept<a href="License">@Resources.UI.PlayerViews.TournamentRegulations</a>
</p>

<div>
    <button name="apply-submit" id="apply" class="btn btn-default" disabled>@Resources.UI.PlayerViews.Accept</button>
    <button id="apply-cancel" class="btn btn-default">@Resources.UI.PlayerViews.BackPrevPage</button>

    <span id="ajaxResultMessage"></span>
</div>
}
@Scripts.Render("~/bundles/tournamentapplyscripts")